@import '../../vars';
.finishPage {
    h2 {
        grid-area: c;
        margin-bottom: 20px;
    }
    position: relative;
    padding: 50px 50px;
    color: $white;
    display: grid;
    grid-template-areas:
        'a b'
        'c c'
        'e e'
        'd d';
    justify-content: center;
    justify-items: center;
    &.totalOnly {
        grid-template-areas:
            'b b'
            'c c'
            'e e'
            'd d';
    }

    .chartWrapper {
        grid-area: c;
    }
    .catChart {
        grid-area: e;
    }

    .result,
    .total {
        margin-bottom: 20px;

        &.chartWrapper,
        &.catChart {
            display: flex;
            justify-content: center;
            color: $white;
            width: 900px;
            margin: 0 auto;
            rect[fill='#ffffff'] {
                fill: $main-color;
            }
            text {
                fill: $white;
            }
            g {
                g {
                    path {
                        fill: $main-color;
                    }
                }
            }
        }
        &.catChart {
            position: relative;
            margin-bottom: 50px;
            .chartLabel {
                position: absolute;
                bottom: -30px;
                left: 50%;
                transform: translateX(-50%);
                display: flex;
                align-items: flex-start;
                gap: 60px;
                font-size: 14px;
                .correctLabel,
                .totalLabel {
                    position: relative;
                    &::before {
                        content: '';
                        position: absolute;
                        top: 0;
                        left: -33px;
                        height: 14px;
                        width: 28px;
                        background-color: $blue-color;
                    }
                }
                .totalLabel::before {
                    background-color: $purple-color;
                }
            }
            g {
                rect[fill='#eeeeee'] {
                    fill: $purple-color;
                }
                rect[fill='#cccccc'],
                rect[fill='#ebebeb'] {
                    fill: rgba(255, 255, 255, 0.05);
                }
                g {
                    g {
                        text[y='148.9'] {
                            fill: red;
                        }
                    }
                }
            }
        }
    }
    .buttons {
        grid-area: d;
        color: $white;
        text-align: center;
        margin-top: 50px;
        display: flex;
        gap: 30px;
    }
}
@media (max-width: 768px) {
    .finishPage {
        grid-template-areas:
            'a'
            'b'
            'c'
            'e'
            'd';
        justify-items: start;
        .result {
            &.chartWrapper,
            &.catChart {
                width: 400px;
                .chartLabel {
                    bottom: -50px;
                    .correctLabel::before,
                    .totalLabel::before {
                        top: 1px;
                        left: -20px;
                        height: 28px;
                        width: 14px;
                    }
                }
            }
        }
        .buttons {
            justify-self: center;
        }
    }
}
@media (max-width: 450px) {
    .finishPage {
        padding: 40px 10px;
        .result {
            &.chartWrapper,
            &.catChart {
                width: 300px;
            }
        }
    }
}
